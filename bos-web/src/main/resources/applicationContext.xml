<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">


    <!-- *************************配置连接池************************* -->

    <!--1.设置读取db.properties文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--2.设置连接池-->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="DriverClass" value="${jdbc.driverClass}"/>
        <property name="JdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="User" value="${jdbc.user}"/>
        <property name="Password" value="${jdbc.password}"/>
    </bean>


    <!--配置SessionFactory到容器中-->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">

        <!--3.将连接池注入sessionFactory-->
        <property name="dataSource" ref="dataSource"/>

        <!-- 配置hibernate基本信息 -->
        <property name="hibernateProperties">
            <props>
                <!--方言-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>

                <!--  可选配置 打印SQL语句，缩进，自动建表 -->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!--引入orm元数据,指定orm元数据所在的包路径,spring会自动读取包中的所有配置 -->
        <!--<property name="mappingDirectoryLocations" value="classpath:cn/x5456/entity/" />-->
        <property name="mappingLocations">
            <list>
                <value>classpath:cn/x5456/bos/domain/*.xml</value>
                <!--maven工程将bos-domain打成一个jar包，搜索package找不到；所以要用类路径来找-->
            </list>
        </property>
    </bean>


    <!-- *************************开启注解事务************************* -->
    <!-- 核心事务管理器 -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--将autowire...注解对象加入spring容器；但由于 <context:component-scan base-package="cn.x5456.bos"/>这句也会将其加入容器，所以可以不用写-->
    <!--<context:annotation-config/>-->

    <!--注：使用扫描事物，一定要开spring组件扫描-->
    <context:component-scan base-package="cn.x5456.bos"/>

    <!--扫描事物-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- *************************注册crm客户端代理对象*************************-->
    <jaxws:client id="crmClient"
                  serviceClass="cn.x5456.crmClient.ICustomerService"
                  address="http://127.0.0.1:8889/crm/service/customer"/>


    <!-- *************************配置shiro框架的过滤工厂************************* -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.jsp"/>
        <property name="successUrl" value="/index.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>

        <!--设定URL级别拦截策略-->
        <property name="filterChainDefinitions">
            <value>
                /css/** = anon
                /js/** = anon
                /images/** = anon
                /validatecode.jsp* = anon
                /login.jsp = anon
                /userAction_login.action = anon
                /page_base_staff.action = perms["staff-list"]
                /* = authc
            </value>
        </property>
    </bean>

    <!--配置安全管理器-->
    <bean name="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="bosRealm"/>
    </bean>


    <!--注册自定义的realm-->
    <bean name="bosRealm" class="cn.x5456.bos.web.realm.BOSRealm"/>

</beans>